{"swagger": "2.0", "info": {"title": "Product Partner API", "description": "Product Partner APIs can create, list, and modify goals, prds, status updates, and other product management artifacts.", "termsOfService": "https://www.google.com/policies/terms/", "contact": {"email": "chris@productpartner.ai"}, "license": {"name": "MIT License"}, "version": "v1"}, "host": "0.0.0.0:8000", "schemes": ["http"], "basePath": "/", "consumes": ["application/json"], "produces": ["application/json"], "paths": {"/api/goals/": {"get": {"operationId": "api_goals_list", "description": "List or Search for Goals", "parameters": [{"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}, {"name": "search", "in": "query", "description": "Search term for goal name, language, or description", "type": "string"}, {"name": "stakeholder_users", "in": "query", "description": "Comma-separated list of stakeholder IDs", "type": "string"}, {"name": "status", "in": "query", "description": "Filter by status", "type": "string"}, {"name": "sort", "in": "query", "description": "Sort field (prefix with '-' for descending order)", "type": "string"}, {"name": "limit", "in": "query", "description": "Limit the number of results", "type": "integer"}, {"name": "tags", "in": "query", "description": "Filter by tags, one or more", "type": "string"}, {"name": "X-User-ID", "in": "header", "description": "User ID (required when using API key)", "type": "string"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Goal"}}}}, "tags": ["api"]}, "post": {"operationId": "api_goals_create", "description": "Create a new goal.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Goal"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Goal"}}}, "tags": ["api"]}, "parameters": []}, "/api/goals/picker/": {"get": {"operationId": "api_goals_picker_list", "description": "List or Search for Goals in picker, a reduced set of functions and returned values but lighter weight and faster.", "parameters": [{"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}, {"name": "status", "in": "query", "description": "Optional filter to include all goals, pass 'all' or another status.", "type": "string"}, {"name": "search", "in": "query", "description": "Search term for goal name, language, or description", "type": "string"}, {"name": "X-User-ID", "in": "header", "description": "User ID (required when using API key)", "type": "string"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/GoalPicker"}}}}, "tags": ["api"]}, "parameters": []}, "/api/goals/{goal_id}/": {"get": {"operationId": "api_goals_read", "description": "Get details of a specific goal.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Goal"}}}, "tags": ["api"]}, "put": {"operationId": "api_goals_update", "description": "Update a specific goal.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Goal"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Goal"}}, "404": {"description": "Not found"}}, "tags": ["api"]}, "patch": {"operationId": "api_goals_partial_update", "description": "Partially update a specific goal.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Goal"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Goal"}}, "404": {"description": "Not found"}}, "tags": ["api"]}, "delete": {"operationId": "api_goals_delete", "description": "Delete a specific goal.", "parameters": [], "responses": {"204": {"description": "No content"}}, "tags": ["api"]}, "parameters": [{"name": "goal_id", "in": "path", "required": true, "type": "string"}]}, "/api/prds/": {"get": {"operationId": "api_prds_list", "description": "Get a list of all PRDs for the authenticated user's organization.", "parameters": [{"name": "X-User-ID", "in": "header", "description": "User ID (required when using API key)", "type": "string"}, {"name": "stakeholders", "in": "query", "description": "Comma-separated list of stakeholder user IDs to filter by", "type": "string"}, {"name": "status", "in": "query", "description": "Status to filter by", "type": "string"}, {"name": "search", "in": "query", "description": "Search term to filter PRDs by title, description, or body", "type": "string"}, {"name": "sort", "in": "query", "description": "Field to sort by (e.g., 'title', '-created_date')", "type": "string"}, {"name": "limit", "in": "query", "description": "Limit the number of PRDs returned", "type": "integer"}, {"name": "tags", "in": "query", "description": "Comma-separated list of tag names to filter PRDs by", "type": "string"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/PRD"}}}}, "tags": ["api"]}, "post": {"operationId": "api_prds_create", "description": "Create a new PRD for the authenticated user's organization.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/PRD"}}, {"name": "X-User-ID", "in": "header", "description": "User ID (required when using API key)", "type": "string"}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/PRD"}}}, "tags": ["api"]}, "parameters": []}, "/api/prds/{prd_id}/": {"get": {"operationId": "api_prds_read", "description": "Get details of a specific PRD.", "parameters": [{"name": "X-User-ID", "in": "header", "description": "User ID (required when using API key)", "type": "string"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/PRD"}}}, "tags": ["api"]}, "put": {"operationId": "api_prds_update", "description": "Update a specific PRD.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/PRD"}}, {"name": "X-User-ID", "in": "header", "description": "User ID (required when using API key)", "type": "string"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/PRD"}}}, "tags": ["api"]}, "patch": {"operationId": "api_prds_partial_update", "description": "Partially update a specific PRD.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/PRD"}}, {"name": "X-User-ID", "in": "header", "description": "User ID (required when using API key)", "type": "string"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/PRD"}}}, "tags": ["api"]}, "delete": {"operationId": "api_prds_delete", "description": "Delete a specific PRD.", "parameters": [{"name": "X-User-ID", "in": "header", "description": "User ID (required when using API key)", "type": "string"}], "responses": {"204": {"description": "No content"}}, "tags": ["api"]}, "parameters": [{"name": "prd_id", "in": "path", "required": true, "type": "string"}]}, "/api/programs/": {"get": {"operationId": "api_programs_list", "description": "Get a list of all programs for the authenticated user.", "parameters": [{"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}, {"name": "X-User-ID", "in": "header", "description": "User ID (required when using API key)", "type": "string"}, {"name": "search", "in": "query", "description": "Search in name and description", "type": "string"}, {"name": "tags", "in": "query", "description": "Filter by tags (comma-separated)", "type": "string"}, {"name": "ordering", "in": "query", "description": "Sort by field (prefix with '-' for descending)", "type": "string"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Program"}}}}, "tags": ["api"]}, "post": {"operationId": "api_programs_create", "description": "Create a new program for the authenticated user.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Program"}}, {"name": "X-User-ID", "in": "header", "description": "User ID (required when using API key)", "type": "string"}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Program"}}}, "tags": ["api"]}, "parameters": []}, "/api/programs/picker/": {"get": {"operationId": "api_programs_picker_list", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/ProgramPicker"}}}}, "tags": ["api"]}, "parameters": []}, "/api/programs/{program_id}/": {"get": {"operationId": "api_programs_read", "description": "Get details of a specific program.", "parameters": [{"name": "X-User-ID", "in": "header", "description": "User ID (required when using API key)", "type": "string"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Program"}}}, "tags": ["api"]}, "put": {"operationId": "api_programs_update", "description": "Update a specific program.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Program"}}, {"name": "X-User-ID", "in": "header", "description": "User ID (required when using API key)", "type": "string"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Program"}}}, "tags": ["api"]}, "patch": {"operationId": "api_programs_partial_update", "description": "Partially update a specific program.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Program"}}, {"name": "X-User-ID", "in": "header", "description": "User ID (required when using API key)", "type": "string"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Program"}}}, "tags": ["api"]}, "delete": {"operationId": "api_programs_delete", "description": "Delete a specific program.", "parameters": [{"name": "X-User-ID", "in": "header", "description": "User ID (required when using API key)", "type": "string"}], "responses": {"204": {"description": "No content"}}, "tags": ["api"]}, "parameters": [{"name": "program_id", "in": "path", "required": true, "type": "string"}]}, "/api/status/": {"get": {"operationId": "api_status_list", "description": "Get a list of all statuses for the authenticated user.", "parameters": [{"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}, {"name": "X-User-ID", "in": "header", "description": "User ID (required when using API key)", "type": "string"}, {"name": "status", "in": "query", "description": "Filter by a status value", "type": "string"}, {"name": "search", "in": "query", "description": "Search by keyword against status note or path to green", "type": "string"}, {"name": "sort", "in": "query", "description": "Sort by field (prefix with '-' for descending)", "type": "string"}, {"name": "liimit", "in": "query", "description": "Sort by field (prefix with '-' for descending)", "type": "string"}, {"name": "goal_ids", "in": "query", "description": "Filter on goals, using the UUID of the goal.", "type": "string"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Status"}}}}, "tags": ["api"]}, "post": {"operationId": "api_status_create", "description": "Create a new status for the authenticated user.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Status"}}, {"name": "X-User-ID", "in": "header", "description": "User ID (required when using API key)", "type": "string"}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Status"}}}, "tags": ["api"]}, "parameters": []}, "/api/status/{status_id}/": {"get": {"operationId": "api_status_read", "description": "Get details of a specific status.", "parameters": [{"name": "X-User-ID", "in": "header", "description": "User ID (required when using API key)", "type": "string"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Status"}}}, "tags": ["api"]}, "put": {"operationId": "api_status_update", "description": "Update a specific status.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Status"}}, {"name": "X-User-ID", "in": "header", "description": "User ID (required when using API key)", "type": "string"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Status"}}}, "tags": ["api"]}, "patch": {"operationId": "api_status_partial_update", "description": "Partially update a specific status.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Status"}}, {"name": "X-User-ID", "in": "header", "description": "User ID (required when using API key)", "type": "string"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Status"}}}, "tags": ["api"]}, "delete": {"operationId": "api_status_delete", "description": "Delete a specific status.", "parameters": [{"name": "X-User-ID", "in": "header", "description": "User ID (required when using API key)", "type": "string"}], "responses": {"204": {"description": "No content"}}, "tags": ["api"]}, "parameters": [{"name": "status_id", "in": "path", "required": true, "type": "string"}]}, "/api/tags/": {"get": {"operationId": "api_tags_list", "description": "Get a list of all tags for the authenticated user.", "parameters": [{"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}, {"name": "X-User-ID", "in": "header", "description": "User ID (required when using API key)", "type": "string"}, {"name": "search", "in": "query", "description": "Search tags by name", "type": "string"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Tag"}}}}, "tags": ["api"]}, "post": {"operationId": "api_tags_create", "description": "Create a new tag for the authenticated user.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Tag"}}, {"name": "X-User-ID", "in": "header", "description": "User ID (required when using API key)", "type": "string"}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Tag"}}}, "tags": ["api"]}, "parameters": []}, "/api/tags/{tag_id}/": {"get": {"operationId": "api_tags_read", "description": "Get details of a specific tag.", "parameters": [{"name": "X-User-ID", "in": "header", "description": "User ID (required when using API key)", "type": "string"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Tag"}}}, "tags": ["api"]}, "put": {"operationId": "api_tags_update", "description": "Update a specific tag.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Tag"}}, {"name": "X-User-ID", "in": "header", "description": "User ID (required when using API key)", "type": "string"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Tag"}}}, "tags": ["api"]}, "patch": {"operationId": "api_tags_partial_update", "description": "Partially update a specific tag.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Tag"}}, {"name": "X-User-ID", "in": "header", "description": "User ID (required when using API key)", "type": "string"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Tag"}}}, "tags": ["api"]}, "delete": {"operationId": "api_tags_delete", "description": "Delete a specific tag.", "parameters": [{"name": "X-User-ID", "in": "header", "description": "User ID (required when using API key)", "type": "string"}], "responses": {"204": {"description": "No content"}}, "tags": ["api"]}, "parameters": [{"name": "tag_id", "in": "path", "required": true, "type": "string"}]}, "/api/user/": {"get": {"operationId": "api_user_list", "description": "Retrieve details of a specific user", "parameters": [{"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}, {"name": "id", "in": "path", "description": "UUID of the user to retrieve", "required": true, "type": "string", "format": "uuid"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/User"}}, "404": {"description": "User not found"}}, "tags": ["api"]}, "post": {"operationId": "api_user_create", "description": "Create a new user for the authenticated user's organization.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/User"}}, {"name": "X-User-ID", "in": "header", "description": "User ID (required when using API key)", "type": "string"}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/User"}}}, "tags": ["api"]}, "parameters": []}, "/api/user/picker/": {"get": {"operationId": "api_user_picker_list", "description": "Retrieve list of users matching none or all of search parameters.", "parameters": [{"name": "X-User-ID", "in": "header", "description": "User ID (required when using API key)", "type": "string"}, {"name": "search", "in": "query", "description": "Search term for filtering users by email, last name, or first name", "required": false, "type": "string"}, {"name": "sort", "in": "query", "description": "Field to sort the results by", "required": false, "type": "string"}, {"name": "limit", "in": "query", "description": "Maximum number of results to return", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/User"}}}, "404": {"description": "User not found"}}, "tags": ["api"]}, "parameters": []}, "/api/user/{id}/": {"get": {"operationId": "api_user_read", "description": "Get a list of all PRDs for the authenticated user's organization.", "parameters": [{"name": "X-User-ID", "in": "header", "description": "User ID (required when using API key)", "type": "string"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/User"}}}}, "tags": ["api"]}, "put": {"operationId": "api_user_update", "description": "Update a specific user's details", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/User"}}, {"name": "id", "in": "path", "description": "UUID of the user to update", "required": true, "type": "string", "format": "uuid"}, {"name": "X-User-ID", "in": "header", "description": "User ID (required when using API key)", "type": "string"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/User"}}, "404": {"description": "User not found"}}, "tags": ["api"]}, "patch": {"operationId": "api_user_partial_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/User"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/User"}}}, "tags": ["api"]}, "delete": {"operationId": "api_user_delete", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["api"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/api/userstories/": {"get": {"operationId": "api_userstories_list", "description": "List or Search for User Stories", "parameters": [{"name": "search", "in": "query", "description": "Search term for as_a, i_want_to, so_that, or freetext_override fields", "type": "string"}, {"name": "status", "in": "query", "description": "Filter by status", "type": "string"}, {"name": "prd", "in": "query", "description": "Filter by PRD ID", "type": "integer"}, {"name": "sort", "in": "query", "description": "Sort field (prefix with '-' for descending order)", "type": "string"}, {"name": "limit", "in": "query", "description": "Limit the number of results", "type": "integer"}, {"name": "X-User-ID", "in": "header", "description": "User ID (required when using API key)", "type": "string"}, {"name": "format", "in": "query", "description": "Response format (json or excel, default is json)", "type": "string"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/UserStory"}}}}, "tags": ["api"]}, "post": {"operationId": "api_userstories_create", "description": "Create a new user story.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/UserStory"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/UserStory"}}}, "tags": ["api"]}, "parameters": []}, "/api/userstories/{userstory_id}/": {"get": {"operationId": "api_userstories_read", "description": "Get details of a specific user story.", "parameters": [{"name": "X-User-ID", "in": "header", "description": "User ID (required when using API key)", "type": "string"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/UserStory"}}}, "tags": ["api"]}, "put": {"operationId": "api_userstories_update", "description": "Update a specific user story.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/UserStory"}}, {"name": "X-User-ID", "in": "header", "description": "User ID (required when using API key)", "type": "string"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/UserStory"}}}, "tags": ["api"]}, "patch": {"operationId": "api_userstories_partial_update", "description": "Partially update a specific user story.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/UserStory"}}, {"name": "X-User-ID", "in": "header", "description": "User ID (required when using API key)", "type": "string"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/UserStory"}}}, "tags": ["api"]}, "delete": {"operationId": "api_userstories_delete", "description": "Delete a specific user story.", "parameters": [{"name": "X-User-ID", "in": "header", "description": "User ID (required when using API key)", "type": "string"}], "responses": {"204": {"description": "No content"}}, "tags": ["api"]}, "parameters": [{"name": "userstory_id", "in": "path", "required": true, "type": "string"}]}, "/chat": {"get": {"operationId": "chat_list", "description": "", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["chat"]}, "parameters": []}, "/chat/upload/": {"post": {"operationId": "chat_upload_create", "description": "", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["chat"]}, "parameters": []}, "/leaders": {"get": {"operationId": "leaders_list", "description": "", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["leaders"]}, "parameters": []}, "/prd/template/": {"get": {"operationId": "prd_template_list", "description": "List PRD templates for the authenticated user's organization.", "parameters": [{"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}, {"name": "X-User-ID", "in": "header", "description": "User ID (required when using API key)", "type": "string"}, {"name": "q", "in": "query", "description": "Search query", "type": "string"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/PRDTemplate"}}}}, "tags": ["prd"]}, "post": {"operationId": "prd_template_create", "description": "List or create PRD templates for the authenticated user's organization.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/PRDTemplate"}}, {"name": "X-User-ID", "in": "header", "description": "User ID (required when using API key)", "type": "string"}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/PRDTemplate"}}}, "tags": ["prd"]}, "parameters": []}, "/prd/template/{prdtemplate_id}/": {"get": {"operationId": "prd_template_read", "description": "Get a PRD template.", "parameters": [{"name": "X-User-ID", "in": "header", "description": "User ID (required when using API key)", "type": "string"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/PRDTemplate"}}}, "tags": ["prd"]}, "put": {"operationId": "prd_template_update", "description": "Retrieve, update or delete a PRD template.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/PRDTemplate"}}, {"name": "X-User-ID", "in": "header", "description": "User ID (required when using API key)", "type": "string"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/PRDTemplate"}}}, "tags": ["prd"]}, "patch": {"operationId": "prd_template_partial_update", "description": "Retrieve, update or delete a PRD template.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/PRDTemplate"}}, {"name": "X-User-ID", "in": "header", "description": "User ID (required when using API key)", "type": "string"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/PRDTemplate"}}}, "tags": ["prd"]}, "delete": {"operationId": "prd_template_delete", "description": "Retrieve, update or delete a PRD template.", "parameters": [{"name": "X-User-ID", "in": "header", "description": "User ID (required when using API key)", "type": "string"}], "responses": {"204": {"description": "No Content"}}, "tags": ["prd"]}, "parameters": [{"name": "prdtemplate_id", "in": "path", "required": true, "type": "string"}]}}, "definitions": {"Goal": {"required": ["name", "goal_language"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "name": {"title": "Name", "type": "string", "maxLength": 255, "minLength": 1}, "goal_language": {"title": "Goal language", "type": "string", "minLength": 1}, "description": {"title": "Description", "type": "string", "x-nullable": true}, "why_it_matters": {"title": "Why it matters", "type": "string", "x-nullable": true}, "created_date": {"title": "Created date", "type": "string", "format": "date-time", "readOnly": true}, "modified_date": {"title": "Modified date", "type": "string", "format": "date-time", "readOnly": true}, "original_due_date": {"title": "Original due date", "type": "string", "format": "date-time"}, "current_due_date": {"title": "Current due date", "type": "string", "format": "date-time"}, "owner_users": {"title": "Owner users", "type": "array", "readOnly": true, "items": {"type": "object", "properties": {"id": {"type": "string"}, "email": {"type": "string"}, "first_name": {"type": "string"}, "last_name": {"type": "string"}}}}, "programs": {"title": "Programs", "type": "array", "readOnly": true, "items": {"type": "object", "properties": {"id": {"type": "string"}, "name": {"type": "string"}}}}, "stakeholder_users": {"title": "Stakeholder users", "type": "array", "readOnly": true, "items": {"type": "object", "properties": {"id": {"type": "string"}, "email": {"type": "string"}, "first_name": {"type": "string"}, "last_name": {"type": "string"}}}}, "tags": {"title": "Tags", "type": "array", "readOnly": true, "items": {"type": "object", "properties": {"id": {"type": "string"}, "tag": {"type": "string"}}}}, "version": {"title": "Version", "type": "integer", "maximum": 2147483647, "minimum": -2147483648, "x-nullable": true}, "version_summary": {"title": "Version summary", "type": "string"}, "created_by": {"title": "Created by", "type": "array", "readOnly": true, "properties": {"id": {"type": "string"}, "email": {"type": "string"}, "first_name": {"type": "string"}, "last_name": {"type": "string"}}}, "status": {"title": "Status", "type": "string", "readOnly": true}}}, "GoalPicker": {"type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "name": {"title": "Name", "type": "string", "readOnly": true, "minLength": 1}, "goal_language": {"title": "Goal language", "type": "string", "readOnly": true, "minLength": 1}}}, "PRD": {"required": ["title"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "title": {"title": "Title", "type": "string", "maxLength": 255, "minLength": 1}, "description": {"title": "Description", "type": "string", "x-nullable": true}, "body": {"title": "Body", "type": "string", "x-nullable": true}, "status": {"title": "Status", "type": "string", "enum": ["DRAFT", "PENDING_REVIEW", "IN_REVIEW", "APPROVED", "PUBLISHED"]}, "due_date": {"title": "Due date", "type": "string", "format": "date-time"}, "modified_date": {"title": "Modified date", "type": "string", "format": "date-time", "readOnly": true}, "tags": {"title": "Tags", "type": "array", "readOnly": true, "items": {"type": "object", "properties": {"id": {"type": "string"}, "tag": {"type": "string"}}}}, "stakeholder_users": {"title": "Stakeholder users", "type": "array", "readOnly": true, "items": {"type": "object", "properties": {"id": {"type": "string"}, "email": {"type": "string"}, "first_name": {"type": "string"}, "last_name": {"type": "string"}}}}, "programs": {"title": "Programs", "type": "array", "readOnly": true, "items": {"type": "object", "properties": {"id": {"type": "string"}, "name": {"type": "string"}}}}, "created_by": {"title": "Created by", "type": "array", "readOnly": true, "properties": {"id": {"type": "string"}, "email": {"type": "string"}, "first_name": {"type": "string"}, "last_name": {"type": "string"}}}, "created_date": {"title": "Created date", "type": "string", "format": "date-time", "readOnly": true}}}, "Program": {"required": ["name"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "name": {"title": "Name", "type": "string", "maxLength": 255, "minLength": 1}, "description": {"title": "Description", "type": "string", "x-nullable": true}, "charter": {"title": "Charter", "type": "string", "x-nullable": true}, "principal_users": {"title": "Principal users", "type": "array", "readOnly": true, "items": {"type": "object", "properties": {"id": {"type": "string"}, "email": {"type": "string"}, "first_name": {"type": "string"}, "last_name": {"type": "string"}}}}, "stakeholder_users": {"title": "Stakeholder users", "type": "array", "readOnly": true, "items": {"type": "object", "properties": {"id": {"type": "string"}, "email": {"type": "string"}, "first_name": {"type": "string"}, "last_name": {"type": "string"}}}}, "parent": {"title": "Parent", "type": "string", "format": "uuid", "x-nullable": true}, "tags": {"title": "Tags", "type": "array", "readOnly": true, "items": {"type": "object", "properties": {"id": {"type": "string"}, "tag": {"type": "string"}}}}, "created_by": {"title": "Created by", "type": "array", "readOnly": true, "properties": {"id": {"type": "string"}, "email": {"type": "string"}, "first_name": {"type": "string"}, "last_name": {"type": "string"}}}, "created_date": {"title": "Created date", "type": "string", "format": "date-time", "readOnly": true, "x-nullable": true}, "modified_date": {"title": "Modified date", "type": "string", "format": "date-time", "readOnly": true, "x-nullable": true}}}, "ProgramPicker": {"type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "name": {"title": "Name", "type": "string", "readOnly": true, "minLength": 1}, "description": {"title": "Description", "type": "string", "readOnly": true, "minLength": 1, "x-nullable": true}}}, "GoalBase": {"required": ["name", "goal_language"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "name": {"title": "Name", "type": "string", "maxLength": 255, "minLength": 1}, "goal_language": {"title": "Goal language", "type": "string", "minLength": 1}, "description": {"title": "Description", "type": "string", "x-nullable": true}}}, "Status": {"required": ["goal"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "goal": {"title": "Goal", "type": "string", "format": "uuid"}, "goal_details": {"$ref": "#/definitions/GoalBase"}, "status": {"title": "Status", "type": "string", "enum": ["RED", "YELLOW", "GREEN", "NOT_STARTED", "COMPLETED", "COMPLETED_LATE", "CANCELLED", "DEFERRED"]}, "status_display": {"title": "Status display", "type": "string", "readOnly": true, "minLength": 1}, "date": {"title": "Date", "type": "string", "format": "date-time", "x-nullable": true}, "status_note": {"title": "Status note", "type": "string", "x-nullable": true}, "path_to_green": {"title": "Path to green", "type": "string", "x-nullable": true}, "publishing_state": {"title": "Publishing state", "type": "string", "enum": ["PENDING_REVIEW", "DRAFT", "REJECTED", "APPROVED", "PUBLISHED"]}, "created_by": {"title": "Created by", "type": "array", "readOnly": true, "properties": {"id": {"type": "string"}, "email": {"type": "string"}, "first_name": {"type": "string"}, "last_name": {"type": "string"}}}, "created_date": {"title": "Created date", "type": "string", "format": "date-time", "readOnly": true}}}, "Tag": {"required": ["tag"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "tag": {"title": "Tag", "type": "string", "maxLength": 255, "minLength": 1}, "archived": {"title": "Archived", "type": "boolean"}, "created_date": {"title": "Created date", "type": "string", "format": "date-time", "readOnly": true, "x-nullable": true}}}, "Organization": {"required": ["name"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "name": {"title": "Name", "type": "string", "maxLength": 255, "minLength": 1}}}, "Address": {"required": ["street_address", "city", "state", "postal_code", "country"], "type": "object", "properties": {"street_address": {"title": "Street address", "type": "string", "maxLength": 255, "minLength": 1}, "city": {"title": "City", "type": "string", "maxLength": 100, "minLength": 1}, "state": {"title": "State", "type": "string", "maxLength": 100, "minLength": 1}, "postal_code": {"title": "Postal code", "type": "string", "maxLength": 20, "minLength": 1}, "country": {"title": "Country", "type": "string", "maxLength": 100, "minLength": 1}}}, "User": {"required": ["email"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "email": {"title": "Email address", "type": "string", "format": "email", "maxLength": 254, "minLength": 1}, "first_name": {"title": "First name", "type": "string", "maxLength": 255}, "last_name": {"title": "Last name", "type": "string", "maxLength": 255}, "is_active": {"title": "Active", "type": "boolean"}, "is_staff": {"title": "Staff status", "type": "boolean"}, "date_joined": {"title": "Date joined", "type": "string", "format": "date-time", "readOnly": true, "default": "2024-10-08"}, "last_login": {"title": "Last login", "type": "string", "format": "date-time", "readOnly": true}, "organization": {"$ref": "#/definitions/Organization"}, "address": {"$ref": "#/definitions/Address"}, "user_facts": {"title": "User facts", "type": "object"}, "walkthrough_status": {"title": "Walkthrough status", "type": "object"}}}, "UserStory": {"type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "prd": {"title": "Prd", "type": "string", "minLength": 1}, "as_a": {"title": "As a", "type": "string", "maxLength": 255, "x-nullable": true}, "i_want_to": {"title": "I want to", "type": "string", "maxLength": 255, "x-nullable": true}, "so_that": {"title": "So that", "type": "string", "maxLength": 255, "x-nullable": true}, "freetext_override": {"title": "Freetext override", "type": "string", "x-nullable": true}, "created_date": {"title": "Created date", "type": "string", "format": "date-time", "readOnly": true}, "modified_date": {"title": "Modified date", "type": "string", "format": "date-time", "readOnly": true}, "due_date": {"title": "Due date", "type": "string", "format": "date-time", "x-nullable": true}, "status": {"title": "Status", "type": "string", "enum": ["RED", "YELLOW", "GREEN", "NOT_STARTED", "COMPLETED", "COMPLETED_LATE", "CANCELLED", "DEFERRED"]}, "priority": {"title": "Priority", "type": "string", "maxLength": 50, "x-nullable": true}, "tags": {"title": "Tags", "type": "array", "readOnly": true, "items": {"type": "object", "properties": {"id": {"type": "string"}, "tag": {"type": "string"}}}}, "created_by": {"title": "Created by", "type": "array", "readOnly": true, "properties": {"id": {"type": "string"}, "email": {"type": "string"}, "first_name": {"type": "string"}, "last_name": {"type": "string"}}}}}, "PRDTemplate": {"required": ["title", "template"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "organization": {"title": "Organization", "type": "string", "format": "uuid", "readOnly": true}, "title": {"title": "Title", "type": "string", "maxLength": 255, "minLength": 1}, "template": {"title": "Template", "type": "string", "minLength": 1}, "created_by": {"title": "Created by", "type": "array", "readOnly": true, "properties": {"id": {"type": "string"}, "email": {"type": "string"}, "first_name": {"type": "string"}, "last_name": {"type": "string"}}}, "created_date": {"title": "Created date", "type": "string", "format": "date-time", "readOnly": true}, "modified_date": {"title": "Modified date", "type": "string", "format": "date-time", "readOnly": true}}}}}